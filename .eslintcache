[{"C:\\Users\\q\\week3\\list-app\\src\\index.js":"1","C:\\Users\\q\\week3\\list-app\\src\\App.js":"2","C:\\Users\\q\\week3\\list-app\\src\\components\\JobBoardComponent.js":"3","C:\\Users\\q\\week3\\gongu\\src\\index.js":"4","C:\\Users\\q\\week3\\gongu\\src\\App.js":"5","C:\\Users\\q\\week3\\gongu\\src\\components\\JobBoardComponent.js":"6","C:\\Users\\q\\week3\\gongu\\src\\components\\Modal\\CreateChatModal.js":"7"},{"size":220,"mtime":1610598639916,"results":"8","hashOfConfig":"9"},{"size":2098,"mtime":1610624153097,"results":"10","hashOfConfig":"9"},{"size":2558,"mtime":1610624371962,"results":"11","hashOfConfig":"9"},{"size":484,"mtime":1610726979206,"results":"12","hashOfConfig":"13"},{"size":3081,"mtime":1610727030096,"results":"14","hashOfConfig":"13"},{"size":2431,"mtime":1610712114055,"results":"15","hashOfConfig":"13"},{"size":4407,"mtime":1610719632148,"results":"16","hashOfConfig":"13"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ory3kv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tof3e",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},"C:\\Users\\q\\week3\\list-app\\src\\index.js",[],"C:\\Users\\q\\week3\\list-app\\src\\App.js",["33"],"C:\\Users\\q\\week3\\list-app\\src\\components\\JobBoardComponent.js",[],"C:\\Users\\q\\week3\\gongu\\src\\index.js",[],"C:\\Users\\q\\week3\\gongu\\src\\App.js",["34","35","36"],"C:\\Users\\q\\week3\\gongu\\src\\components\\JobBoardComponent.js",[],["37","38"],"C:\\Users\\q\\week3\\gongu\\src\\components\\Modal\\CreateChatModal.js",["39"],"import React, {useState} from 'react';\r\nimport \"./modal.css\";\r\nimport {Button, ButtonGroup} from 'reactstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst Modal = ( props ) => {\r\n  const { open, close, header } = props;\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subtitle, setSubtitle] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [members, setMembers] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const [sdate, setSdate] = useState(null);\r\n  const [cSelected, setCSelected] = useState([]);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  const onCheckboxBtnClick = (selected) => {\r\n    const index = cSelected.indexOf(selected);\r\n    if (index < 0) {\r\n      cSelected.push(selected);\r\n    } else {\r\n      cSelected.splice(index, 1);\r\n    }\r\n    setCSelected([...cSelected]);\r\n  }\r\n\r\n  return (\r\n    <div className={ open ? 'openModal modal' : 'modal' } id=\"myModal\">\r\n      { open ? (  \r\n        <section>\r\n\r\n          <header>\r\n            {header}\r\n            <button className=\"close\" onClick={close}> &times; </button>\r\n          </header>\r\n\r\n          <main>\r\n            <form>\r\n\r\n            <div class=\"form-group\">\r\n            <label>제목:</label>\r\n              <input type=\"text\" class=\"form-control\" name=\"title\" value={title} onChange={({target: {value}}) => setTitle(value)}></input>\r\n            \r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n            <label>사진:</label>\r\n              <input type=\"file\" name=\"image\" value={image} onChange={({target: {value}}) => setImage(value)}></input>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n            <label>소제목:</label>\r\n              <input type=\"text\" class=\"form-control\" name=\"subtitle\" value={subtitle} onChange={({target: {value}}) => setSubtitle(value)}></input>\r\n            </div>\r\n\r\n            {/* <div class=\"form-group\">\r\n            <label>날짜:</label>\r\n              <input type=\"datepicker\" class=\"form-control\" name=\"sdate\" value={sdate} onChange={({target: {value}}) => setSdate(value)}></input>\r\n            </div> */}\r\n\r\n            <div class=\"form-group\">\r\n            <label>날짜:</label>\r\n            <Row>\r\n              <Col>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={date => setStartDate(date)}\r\n              selectsStart\r\n              startDate={startDate}\r\n              endDate={endDate}\r\n              /></Col>\r\n\r\n              <Col>\r\n            <DatePicker\r\n              selected={endDate}\r\n              onChange={date => setEndDate(date)}\r\n              selectsEnd\r\n              startDate={startDate}\r\n              endDate={endDate}\r\n              minDate={startDate}\r\n              /></Col>\r\n              </Row>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n            <label>지역:</label>\r\n              <input type=\"text\" class=\"form-control\" name=\"location\" value={location} onChange={({target: {value}}) => setLocation(value)}></input>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n            <label >최대 인원수:</label>\r\n            <input type=\"number\" class=\"form-control\" name=\"members\" value={members} onChange={({target: {value}}) => setMembers(value)}></input>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n            <label >카테고리 선택:</label>\r\n              <ButtonGroup class=\"modal-dialog\">\r\n                <Button color=\"primary\" onClick={() => onCheckboxBtnClick(1)} active={cSelected.includes(1)}>One</Button>\r\n                <Button color=\"primary\" onClick={() => onCheckboxBtnClick(2)} active={cSelected.includes(2)}>Two</Button>\r\n                <Button color=\"primary\" onClick={() => onCheckboxBtnClick(3)} active={cSelected.includes(3)}>Three</Button>\r\n              </ButtonGroup>\r\n            </div>\r\n\r\n            </form>\r\n          </main>\r\n          \r\n          <footer>\r\n            <button className=\"btn btn-primary p-2 mx-3\"\r\n             onClick={() => localStorage.setItem(title, [subtitle, location, members, sdate, cSelected])}> Save </button>\r\n          </footer>\r\n\r\n        </section>\r\n      ) : null }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Modal;",{"ruleId":"40","severity":1,"message":"41","line":50,"column":8,"nodeType":"42","endLine":50,"endColumn":66},{"ruleId":"43","severity":1,"message":"44","line":4,"column":21,"nodeType":"45","messageId":"46","endLine":4,"endColumn":27},{"ruleId":"43","severity":1,"message":"47","line":4,"column":29,"nodeType":"45","messageId":"46","endLine":4,"endColumn":40},{"ruleId":"43","severity":1,"message":"48","line":4,"column":42,"nodeType":"45","messageId":"46","endLine":4,"endColumn":52},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"43","severity":1,"message":"53","line":16,"column":17,"nodeType":"45","messageId":"46","endLine":16,"endColumn":25},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'lightColors' is defined but never used.","'darkColors' is defined but never used.","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"'setSdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]